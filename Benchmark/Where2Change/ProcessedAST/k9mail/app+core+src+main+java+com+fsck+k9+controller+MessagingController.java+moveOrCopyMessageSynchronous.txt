move or copy message synchronous
{ if operation == move or copy flavor move and mark as read { throw new unsupported operation exception move and mark as read unsupported } try { local store local store = local store provider get instance account if operation == move or copy flavor move && is move capable account { return } if operation == move or copy flavor copy && is copy capable account { return } local folder local src folder = local store get folder src folder id local src folder open local folder local dest folder = local store get folder dest folder id local dest folder open boolean unread count affected = false list string uids = new linked list for message message : in messages { string uid = message get uid if uid starts with k local uid prefix { uids add uid } if unread count affected && message is set flag seen { unread count affected = true } } list local message messages = local src folder get messages by uids uids if messages size > 0) { timber i move or copy message synchronous source folder = s d messages destination folder = s " + operation = s src folder id messages size dest folder id operation name message store message store = message store manager get message store account list long message ids = new array list map long string message id to uid mapping = new hash map for local message message : messages { long message id = message get database id message ids add message id message id to uid mapping put message id message get uid } map long long result id mapping if operation == move or copy flavor copy { result id mapping = message store copy messages message ids dest folder id if unread count affected { for messaging listener l : get listeners { l folder status changed account dest folder id } } } else { result id mapping = message store move messages message ids dest folder id unsuppress messages account messages if unread count affected { for messaging listener l : get listeners { l folder status changed account src folder id l folder status changed account dest folder id } } } map long string destination mapping = message store get message server ids result id mapping values map string string uid map = new hash map for entry long long entry : result id mapping entry set { long source message id = entry get key long destination message id = entry get value string source uid = message id to uid mapping get source message id string destination uid = destination mapping get destination message id uid map put source uid destination uid } queue move or copy account local src folder get database id local dest folder get database id operation uid map } process pending commands account } catch unavailable storage exception e { timber i failed to move copy message because storage is not available - trying again later throw new unavailable account exception e } catch messaging exception me { throw new runtime exception error moving message me }}
// if this copy operation changes the unread count in the destination folder notify the listeners if this move operation changes the unread count notify the listeners that the unread count changed in both the source and destination folder
