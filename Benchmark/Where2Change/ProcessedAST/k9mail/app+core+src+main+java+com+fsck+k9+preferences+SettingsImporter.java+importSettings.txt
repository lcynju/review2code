import settings
{ try { boolean global settings imported = false list account description pair imported accounts = new array list list account description erroneous accounts = new array list imported imported = parse settings input stream global settings account uuids false preferences preferences = preferences get preferences context storage storage = preferences get storage if global settings { try { storage editor editor = preferences create storage editor if imported global settings != null { import global settings storage editor imported content version imported global settings } else { timber w was asked to import global settings but none found } if editor commit { timber v committed global settings to the preference storage global settings imported = true } else { timber v failed to commit global settings to the preference storage } } catch exception e { timber e e exception while importing global settings } } if account uuids != null && account uuids size > 0) { if imported accounts != null { for string account uuid : account uuids { if imported accounts contains key account uuid { imported account account = imported accounts get account uuid try { storage editor editor = preferences create storage editor account description pair import result = import account context editor imported content version account overwrite if editor commit { timber v committed settings for account s to the settings database import result imported name if import result overwritten { editor = preferences create storage editor string new uuid = import result imported uuid string old account uuids = storage get string account uuids ""); string new account uuids = old account uuids length > 0) ? old account uuids + "," + new uuid : new uuid put string editor account uuids new account uuids if editor commit { throw new settings import export exception failed to set account uuid list } } preferences load accounts imported accounts add import result } else { timber w error while committing settings for account s to the settings " + database import result original name erroneous accounts add import result original } } catch invalid setting value exception e { timber e e encountered invalid setting while importing account s account name erroneous accounts add new account description account name account uuid } catch exception e { timber e e exception while importing account s account name erroneous accounts add new account description account name account uuid } } else { timber w was asked to import account with uuid s but this account wasn t found account uuid } } storage editor editor = preferences create storage editor string default account uuid = storage get string default account uuid null if default account uuid == null { put string editor default account uuid account uuids get } if editor commit { throw new settings import export exception failed to set default account } } else { timber w was asked to import at least one account but none found } } preferences load accounts special local folders creator local folders creator = di get special local folders creator class for account description pair imported account : imported accounts { string account uuid = imported account imported uuid account account = preferences get account account uuid local folders creator create special local folders account } di get real general settings manager class load settings core set services enabled context return new import results global settings imported imported accounts erroneous accounts } catch settings import export exception e { throw e } catch exception e { throw new settings import export exception e }}
// add uuid of the account we just imported to the list of account uuids reload accounts create special local folders
