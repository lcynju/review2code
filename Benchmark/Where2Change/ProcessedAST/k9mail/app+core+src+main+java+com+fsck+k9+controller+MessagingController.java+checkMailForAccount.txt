check mail for account
{ if account is available context { timber i skipping synchronizing unavailable account s account get description return } timber i synchronizing account s account get description notification state notification state = new notification state send pending messages account listener refresh folder list if stale account try { account folder mode a display mode = account get folder display mode account folder mode a sync mode = account get folder sync mode local store local store = local store provider get instance account for final local folder folder : local store get personal namespaces false { folder open folder class f display class = folder get display class folder class f sync class = folder get sync class if local folder is mode mismatch a display mode f display class { continue } if local folder is mode mismatch a sync mode f sync class { continue } synchronize folder account folder ignore last checked time listener notification state } } catch messaging exception e { timber e e unable to synchronize account s account get name } finally { put background clear notification flag for " + account get description null new runnable { override public void run { timber v clearing notification flag for s account get description if get unread message count account == 0) { notification controller clear new mail notifications account } } }); }}
// never sync a folder that isn t displayed if k debug { log v k log tag not syncing folder " + folder get name + " which is in display mode " + f display class + " while account is in display mode " + a display mode } */// do not sync folders in the wrong class if k debug { log v k log tag not syncing folder " + folder get name + " which is in sync mode " + f sync class + " while account is in sync mode " + a sync mode } */
